#!/bin/bash
#
# S2I run script for the 'springboot-sti' image.
# The run script executes the server that runs your application.
#
# For more information see the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

export WILDFLY_DIR=/opt/wildfly
export OPENJDK=8

if [ -z "$TIMEZONE" ]; then
	echo "···································································································"
	echo "VARIABLE TIMEZONE NO SETEADA - INICIANDO CON VALORES POR DEFECTO"
	echo "POSIBLES VALORES: America/Montevideo | America/El_Salvador"
	echo "···································································································"
else
	echo "···································································································"
	echo "TIMEZONE SETEADO ENCONTRADO: " $TIMEZONE
	echo "···································································································"
	cat /usr/share/zoneinfo/$TIMEZONE > /etc/localtime && \
	echo $TIMEZONE > /etc/timezone
fi

	echo "···································································································"
	echo "INICIANDO APP..."
	echo "···································································································"


if [ ! -f "$WILDFLY_DIR/standalone/configuration/keystore/nodelete" ]; then
echo "-----> NO SE ENCONTRARON LOS CERTIFICADOS NECESARIOS - INICIALIZANDO...."
echo "-----> POR FAVOR AGUARDE UNOS MINUTOS MIENTRAS SE INICIALIZA LA INSTALACION...."
exec $WILDFLY_DIR/bin/standalone.sh -c custom/standalone.xml -b 0.0.0.0 &> /dev/null &
sleep 30
if [ ! -z $CA_SERVER_DOMAIN ]; then
echo "-----> UTILIZANDO COMO NOMBRE DE DOMINIO PARA CA SERVER $CA_SERVER_DOMAIN"
sed -i -e "s/^httpsserver.hostname=localhost/httpsserver.hostname=$CA_SERVER_DOMAIN/" /opt/ejbca/conf/web.properties
fi
cd /opt/ejbca && ant install 2> /dev/stdout ; ant deploy-keystore 2> /dev/stdout && echo "-----> CERTIFICADOS GENERADOS CORRECTAMENTE."
javapid=$(pidof java)
kill -15 $javapid
echo "-----> DETENIENDO WILDFLY AGUARDE...."
javapid=$(pidof java)
while [ $javapid == 0 ]
do
echo "-----> AGUARDANDO QUE WILDFLY SE CIERRE DE FORMA CORRECTA - ESPERE..."
sleep 5
javapid=$(pidof java)
done
echo "-----> ###############################################"
echo "-----> TAREAS FINALIZADAS."
echo "-----> RECUERDE IMPORTAR EL CERTIFICADO superadmin.p12 EN SU NAVEGADOR"
echo "-----> GENERADO EN EL VOLUMEN PERSISTENTE"
echo "-----> PASSWORD: ejbca"
echo "-----> ###############################################"
touch $WILDFLY_DIR/standalone/configuration/keystore/nodelete
echo "-----> VOLVIENDO A INICIAR WILDFLY AGUARDE..."
fi
rm -rf $WILDFLY_DIR/standalone/deployments/*.undeployed $WILDFLY_DIR/standalone/deployments/*.deployed
cat $WILDFLY_DIR/standalone/configuration/custom/standalone.conf > $WILDFLY_DIR/bin/standalone.conf
keytool -genkey -keyalg RSA -alias selfsigned -keystore $WILDFLY_DIR/jolokia.jks -storepass password -validity 360 -keysize 2048 -dname "cn=jolokia, ou=jolokia, o=jolokia, c=jolokia" &> /dev/null
exec $WILDFLY_DIR/bin/standalone.sh -c custom/standalone.xml -b 0.0.0.0