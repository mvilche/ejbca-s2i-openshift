#!/bin/bash -e
#
# S2I assemble script for the 's2i-maven-java' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

set -e


shopt -u dotglob


if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi


if [ ! -f /tmp/src/build.xml ]; then
  echo "FATAL - No build.xml found ANT"
  exit 1
fi


echo "---> INSTALANDO CODIGO FUENTE..."
mkdir /opt/ejbca
cp -Rf /tmp/src/* /opt/ejbca/
rm -rf /tmp/src

if [ -f /opt/ejbca/build.xml ]; then
echo "COMPILANDO ANT.."
cd /opt/ejbca && ant build

ERR=$?
    if [ $ERR -ne 0 ]; then
echo "LA COMPILACION SALIO CON CODIGO DE ERROR $ERR"
exit $ERR
fi
fi


echo "---> COPIANDO APLICACION GENERADA AL DIRECTORIO DE DEPLOY..."
find /opt/ejbca -name '*.war' | xargs cp -t /opt/wildfly/standalone/deployments
find /opt/ejbca -name '*.ear' | xargs cp -t /opt/wildfly/standalone/deployments
echo "APP INSTALADA!" 

war=`ls -1 /opt/wildfly/standalone/deployments/*.war 2>/dev/null | wc -l`
ear=`ls -1 /opt/wildfly/standalone/deployments/*.ear 2>/dev/null | wc -l`

echo "EAR ENCONTRADO $ear"
echo "WAR ENCONTRADO $war"

if [ $war != 0 ] && [ $ear != 0 ]; then
echo "ELIMINANDO WAR, MANTENIENDO EAR"
rm -rf /opt/wildfly/standalone/deployments/*.war
fi
ls -1 /opt/wildfly/standalone/deployments/
